// !! ------------------------------------------------------------ //
// !!            [Microservice] Order models                       //
// !! ------------------------------------------------------------ //
// * Order                                                         //
// * OrderItem                                                     //
// * Sku                                                           //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ //

model Order {
  id            String        @id @default(cuid())
  status        OrderStatus   @default(PENDING)
  totalAmount   Float
  paymentMethod PaymentMethod
  note          String?
  userId        String        @db.Uuid
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  items         OrderItem[]

  @@schema("microservice/order")
}

model OrderItem {
  id        String   @id @default(cuid())
  name      String
  unitPrice Float
  quantity  Int
  subTotal  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  sku       Sku      @relation(fields: [skuId], references: [id])
  skuId     String   @db.Uuid

  @@schema("microservice/order")
}

model Sku {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  price           Int
  discountedPrice Int?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  orderItems      OrderItem[]

  @@schema("microservice/order")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
  REFUNDED

  @@schema("microservice/order")
}

enum PaymentMethod {
  ALIPAY
  BANK_TRANSFER
  CASH
  PAYPAL
  WECHAT_PAY

  @@schema("microservice/order")
}
